{"version":3,"sources":["components/search-box/search-box.component.jsx","components/card/cad.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","this","props","onSearchChange","react_default","a","createElement","type","className","concat","placeholder","onChange","onChangeHandler","Component","Card","_this$props$monster","monster","id","name","email","key","src","alt","CardList","monsters","map","cad_component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","searchValue","target","value","toLowerCase","setState","searchField","state","_this2","fetch","then","response","json","users","_this$state","filteredMonsters","filter","includes","search_box_component","card_list_component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"wRAiBeA,0LAVoBC,KAAKC,MAAxBC,eAER,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,SAASC,UAAS,gBAAAC,OAAkBR,KAAKC,MAAMM,WAAaE,YAAaT,KAAKC,MAAMQ,YAAaC,SAAUV,KAAKC,MAAMU,0BAP1HC,cCaTC,0LAZF,IAAAC,EACuBd,KAAKC,MAAMc,QAA/BC,EADHF,EACGE,GAAIC,EADPH,EACOG,KAAMC,EADbJ,EACaI,MAClB,OACIf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBY,IAAKH,GACjCb,EAAAC,EAAAC,cAAA,OAAKe,IAAG,wBAAAZ,OAA0BQ,EAA1B,0BAAsDK,IAAG,WAAAb,OAAaS,KAC9Ed,EAAAC,EAAAC,cAAA,UAAKY,GACLd,EAAAC,EAAAC,cAAA,SAAIa,WAPDN,cCkBJU,0LAhBF,IACGC,EAAavB,KAAKC,MAAlBsB,SACR,OACIpB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEPgB,EAASC,IAAI,SAACT,GACV,OACGZ,EAAAC,EAAAC,cAACoB,EAAD,CAAMV,QAASA,EAASI,IAAKJ,cARjCH,cCiDRc,qBA/Cb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA5B,KAAA0B,IACZC,EAAAC,OAAAE,EAAA,EAAAF,CAAA5B,KAAA4B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAhC,QAqBFE,eAAiB,SAAC+B,GAChB,IAAMC,EAAcD,EAAME,OAAOC,MAAMC,cACvCV,EAAKW,SAAS,WACZ,MAAO,CAAEC,YAAaL,MAtBxBP,EAAKa,MAAQ,CACXjB,SAAU,GACVgB,YAAa,IALHZ,mFASM,IAAAc,EAAAzC,KAClB0C,MAAM,8CACHC,KAAK,SAACC,GAAD,OAAaA,EAASC,SAC3BF,KAAK,SAACG,GAAD,OAAWL,EAAKH,SAClB,WACE,MAAO,CAACf,SAAUuB,IAEpB,iDAaC,IAAAC,EACyB/C,KAAKwC,MAA9BjB,EADAwB,EACAxB,SAAUgB,EADVQ,EACUR,YACVrC,EAAkBF,KAAlBE,eAED8C,EAAmBzB,EAAS0B,OAAO,SAAClC,GACxC,OAAOA,EAAQE,KAAKoB,cAAca,SAASX,KAG7C,OACEpC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,mBACAJ,EAAAC,EAAAC,cAAC8C,EAAD,CAAWxC,gBAAiBT,EAAgBK,UAAU,aAAaE,YAAY,oBAC/EN,EAAAC,EAAAC,cAAC+C,EAAD,CAAU7B,SAAUyB,YA1CVpC,cCMHyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAd,KAAAa,EAAAE,KAAA,UAAqBf,KAAK,SAAAgB,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlE,EAAAC,EAAAC,cAACF,EAAAC,EAAMkE,WAAP,KACEnE,EAAAC,EAAAC,cAACkE,EAAD,QAOJlB","file":"static/js/main.5ae99016.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport './search-box.styles.css';\n\nclass SearchBox extends Component {\n    render() {\n\n        const { onSearchChange } = this.props;\n\n        return(\n            <div>\n                <input type=\"search\" className={`search-input ${this.props.className}`} placeholder={this.props.placeholder} onChange={this.props.onChangeHandler} />\n            </div>\n        )\n    }\n}\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\n\nimport './card.styles.css';\n\nclass Card extends Component {\n    render() {\n        const { id, name, email } = this.props.monster;\n        return(\n            <div className=\"card-container\" key={id}>\n                <img src={`https://robohash.org/${id}?set=set2&size=180x180`} alt={`Monster ${name}`} />\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        )\n    }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\n\nimport Card from \"../card/cad.component\";\nimport './card-list.styles.css';\n\nclass CardList extends Component {\n    render() {\n        const { monsters } = this.props;\n        return (\n            <div className=\"card-list\">\n                {\n                    monsters.map((monster) => {\n                        return (\n                           <Card monster={monster} key={monster} />\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default CardList;\n","import React, { Component } from 'react';\n\nimport SearchBox from './components/search-box/search-box.component';\nimport CardList from './components/card-list/card-list.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response)=> response.json())\n      .then((users) => this.setState(\n          ()=>{\n            return {monsters: users}\n          },\n          ()=>{\n            // console.log(this.state);\n          })\n        );\n  }\n\n  onSearchChange = (event)=>{\n    const searchValue = event.target.value.toLowerCase();\n    this.setState(() => {\n      return { searchField: searchValue };\n    });\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const {onSearchChange} = this;\n    \n    const filteredMonsters = monsters.filter((monster)=>{\n      return monster.name.toLowerCase().includes(searchField);\n    });\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app-title\">Monster Rolodex</h1>\n        <SearchBox onChangeHandler={onSearchChange} className=\"search-box\" placeholder=\"Search Monsters\" />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}